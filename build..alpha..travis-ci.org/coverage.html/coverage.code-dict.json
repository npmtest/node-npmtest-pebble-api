{"/home/travis/build/npmtest/node-npmtest-pebble-api/test.js":"/* istanbul instrument in package npmtest_pebble_api */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-pebble-api/lib.npmtest_pebble_api.js":"/* istanbul instrument in package npmtest_pebble_api */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_pebble_api = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_pebble_api = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-pebble-api/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-pebble-api && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_pebble_api */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_pebble_api\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_pebble_api.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_pebble_api.rollup.js'] =\n            local.assetsDict['/assets.npmtest_pebble_api.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_pebble_api.__dirname + '/lib.npmtest_pebble_api.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-pebble-api/node_modules/pebble-api/index.js":"module.exports = require('./lib/timeline');\nmodule.exports.Timeline = require('./lib/timeline');\n","/home/travis/build/npmtest/node-npmtest-pebble-api/node_modules/pebble-api/lib/timeline.js":"'use strict';\n\nvar request = require('request');\nvar Pin = require('./pin');\nvar version = require('../package').version;\n\nvar USER_AGENT = 'pebble-api-node/' + version + ';node/' + process.versions.node;\nvar API_ROOT = 'https://timeline-api.getpebble.com';\n\n/**\n * Timeline\n *\n * @constructor\n * @param {Object} [opts]\n */\nvar Timeline = module.exports = function (opts) {\n  opts = opts || {};\n\n  this._apiKey = opts.apiKey || process.env.PEBBLE_TIMELINE_API_KEY;\n\n  this._apiRoot = opts.apiRoot || process.env.PEBBLE_TIMELINE_API_ROOT || API_ROOT;\n};\n\nTimeline.Pin = Pin;\n\n/**\n * Send a pin to a user\n *\n * @param {String} userToken\n * @param {Pin} pin\n * @callback {callback} callback\n */\nTimeline.prototype.sendUserPin = function (userToken, pin, callback) {\n  if (typeof userToken !== 'string') {\n    return process.nextTick(function () {\n      callback(new Error('Expected userToken to be a string.'));\n    });\n  }\n\n  if (!(pin instanceof Pin)) {\n    pin = new Pin(pin);\n  }\n\n  var opts = {\n    method: 'PUT',\n    endpoint: '/v1/user/pins/' + pin.id,\n    headers: {\n      'X-User-Token': userToken\n    },\n    body: pin\n  };\n\n  this._request(opts, callback);\n};\n\n/**\n * Send a pin to a topic\n *\n * @param {Array} topics\n * @param {Pin} pin\n * @callback {callback} callback\n */\nTimeline.prototype.sendSharedPin = function (topics, pin, callback) {\n  if (!this._apiKey) {\n    return process.nextTick(function () {\n      callback(new Error('API Key not set.'));\n    });\n  }\n\n  if (!(topics instanceof Array)) {\n    return process.nextTick(function () {\n      callback(new Error('Expected topics to be an array.'));\n    });\n  }\n\n  if (!(pin instanceof Pin)) {\n    pin = new Pin(pin);\n  }\n\n  var opts = {\n    method: 'PUT',\n    endpoint: '/v1/shared/pins/' + pin.id,\n    headers: {\n      'X-API-Key': this._apiKey,\n      'X-PIN-Topics': topics.join(',')\n    },\n    body: pin\n  };\n\n  this._request(opts, callback);\n};\n\n/**\n * Delete a user pin\n *\n * @param {String} userToken\n * @param {Pin} pin\n * @return {callback} callback\n */\nTimeline.prototype.deleteUserPin = function (userToken, pin, callback) {\n  if (typeof userToken !== 'string') {\n    return process.nextTick(function () {\n      callback(new Error('Expected userToken to be a string.'));\n    });\n  }\n\n  if (!(pin instanceof Pin)) {\n    pin = new Pin(pin);\n  }\n\n  var opts = {\n    method: 'DELETE',\n    endpoint: '/v1/user/pins/' + pin.id,\n    headers: {\n      'X-User-Token': userToken\n    }\n  };\n\n  this._request(opts, callback);\n};\n\n/**\n * Delete a shared pin\n *\n * @param {Pin} pin\n * @return {callback} callback\n */\nTimeline.prototype.deleteSharedPin = function (pin, callback) {\n  if (!this._apiKey) {\n    return process.nextTick(function () {\n      callback(new Error('API Key not set.'));\n    });\n  }\n\n  if (!(pin instanceof Pin)) {\n    pin = new Pin(pin);\n  }\n\n  var opts = {\n    method: 'DELETE',\n    endpoint: '/v1/shared/pins/' + pin.id,\n    headers: {\n      'X-API-Key': this._apiKey\n    }\n  };\n\n  this._request(opts, callback);\n};\n\n/**\n * Subscribe to a topic\n *\n * @param {String} userToken\n * @param {String} topic\n * @callback {callback} callback\n */\nTimeline.prototype.subscribe = function (userToken, topic, callback) {\n  if (typeof userToken !== 'string') {\n    return process.nextTick(function () {\n      callback(new Error('Expected userToken to be a string.'));\n    });\n  }\n\n  if (typeof topic !== 'string') {\n    return process.nextTick(function () {\n      callback(new Error('Expected topic to be a string.'));\n    });\n  }\n\n  var opts = {\n    method: 'POST',\n    endpoint: '/v1/user/subscriptions/' + topic,\n    headers: {\n      'X-User-Token': userToken\n    }\n  };\n\n  this._request(opts, callback);\n};\n\n/**\n * Unsubscribe from a topic\n *\n * @param {String} userToken\n * @param {String} topic\n * @callback {callback} callback\n */\nTimeline.prototype.unsubscribe = function (userToken, topic, callback) {\n  if (typeof userToken !== 'string') {\n    return process.nextTick(function () {\n      callback(new Error('Expected userToken to be a string.'));\n    });\n  }\n\n  if (typeof topic !== 'string') {\n    return process.nextTick(function () {\n      callback(new Error('Expected topic to be a string.'));\n    });\n  }\n\n  var opts = {\n    method: 'DELETE',\n    endpoint: '/v1/user/subscriptions/' + topic,\n    headers: {\n      'X-User-Token': userToken\n    }\n  };\n\n  this._request(opts, callback);\n};\n\n/**\n * List user subscriptions\n *\n * @param {String} userToken\n * @callback {callback} callback\n */\nTimeline.prototype.listSubscriptions = function (userToken, callback) {\n  if (typeof userToken !== 'string') {\n    return process.nextTick(function () {\n      callback(new Error('Expected userToken to be a string.'));\n    });\n  }\n\n  var opts = {\n    method: 'GET',\n    endpoint: '/v1/user/subscriptions',\n    headers: {\n      'X-User-Token': userToken\n    }\n  };\n\n  this._request(opts, function (err, body, res) {\n    if (err) {\n      return callback(err);\n    }\n\n    var topics = body.topics || [];\n\n    callback(null, topics, res);\n  });\n};\n\nTimeline.prototype._request = function(opts, callback) {\n  if (typeof callback !== 'function') {\n    throw new Error('Callback not set but is required.');\n  }\n\n  var reqOpts = {};\n\n  reqOpts.method = opts.method.toUpperCase();\n  reqOpts.url = this._apiRoot + opts.endpoint;\n  reqOpts.headers = opts.headers || {};\n  reqOpts.headers['user-agent'] = USER_AGENT;\n\n  switch (reqOpts.method) {\n    case 'GET':\n      reqOpts.json = true;\n      break;\n    case 'PUT':\n      reqOpts.body = opts.body;\n      reqOpts.json = true;\n      break;\n  }\n\n  request(reqOpts, function (err, res, body) {\n    if (err) {\n      return callback(err, body, res);\n    }\n\n    if (res.statusCode < 300) {\n      return callback(null, body, res);\n    }\n\n    if (Timeline.errorCodes[res.statusCode]) {\n      return callback(new Error(Timeline.errorCodes[res.statusCode]), body, res);\n    }\n\n    callback(new Error('Unknown error. Status code: ' + res.statusCode), body, res);\n  });\n};\n\nTimeline.errorCodes = {\n  400: 'The pin object submitted was invalid.',\n  403: 'The API key submitted was invalid.',\n  410: 'The user token submitted was invalid or does not exist.',\n  429: 'Server is sending updates too quickly.',\n  503: 'Could not save pin due to a temporary server error.',\n};\n","/home/travis/build/npmtest/node-npmtest-pebble-api/node_modules/pebble-api/lib/pin.js":"'use strict';\n\nvar Action = require('./action');\nvar Layout = require('./layout');\nvar Notification = require('./notification');\nvar Reminder = require('./reminder');\n\n/**\n * Pin\n *\n * @constructor\n * @param {Object} [opts]\n */\nvar Pin = module.exports = function (opts) {\n\n  this.reminders = [];\n  this.actions = [];\n\n  if (opts && opts.id) {\n    if (typeof opts.id !== 'string') {\n      throw new Error('Expected id to be a string.');\n    }\n    this.id = opts.id;\n  }\n\n  if (opts && opts.time) {\n    if (!(opts.time instanceof Date)) {\n      throw new Error('Expected time to be a Date.');\n    }\n    this.time = opts.time;\n  }\n\n  if (opts && opts.duration) {\n    if (typeof opts.duration !== 'number') {\n      throw new Error('Expected duration to be a number.');\n    }\n    this.duration = opts.duration;\n  }\n\n  if (opts && opts.createNotification) {\n    this.createNotification = opts.createNotification instanceof Notification ?\n      opts.createNotification : new Notification(opts.createNotification);\n  }\n\n  if (opts && opts.updateNotification) {\n    if (!opts.updateNotification.time) {\n      throw new Error('`time` is required by updateNotification.');\n    }\n    this.updateNotification = opts.updateNotification instanceof Notification ?\n      opts.updateNotification : new Notification(opts.updateNotification);\n  }\n\n  if (opts && opts.layout) {\n    if (!(opts.layout instanceof Layout)) {\n      opts.layout = new Layout(opts.layout);\n    }\n    this.layout = opts.layout;\n  }\n\n  if (opts && opts.reminders) {\n    if (!(opts.reminders instanceof Array)) {\n      throw new Error('Expected reminders to be an array.');\n    }\n    opts.reminders.forEach(function (reminder) {\n      this.reminders.push(new Reminder(reminder));\n    }.bind(this));\n  }\n\n  if (opts && opts.actions) {\n    if (!(opts.actions instanceof Array)) {\n      throw new Error('Expected actions to be an array.');\n    }\n    opts.actions.forEach(function (action) {\n      this.actions.push(new Action(action));\n    }.bind(this));\n  }\n\n  if (!this.time) {\n    throw new Error('`time` is required by Pin.');\n  }\n\n  if (!this.layout) {\n    throw new Error('`layout` is required by Pin.');\n  }\n};\n\nPin.Icon = {\n  NOTIFICATION_GENERIC: 'system://images/NOTIFICATION_GENERIC',\n  NOTIFICATION_REMINDER: 'system://images/NOTIFICATION_REMINDER',\n  NOTIFICATION_FLAG: 'system://images/NOTIFICATION_FLAG',\n  NOTIFICATION_FACEBOOK_MESSENGER: 'system://images/NOTIFICATION_FACEBOOK_MESSENGER',\n  NOTIFICATION_WHATSAPP: 'system://images/NOTIFICATION_WHATSAPP',\n  NOTIFICATION_GMAIL: 'system://images/NOTIFICATION_GMAIL',\n  NOTIFICATION_FACEBOOK: 'system://images/NOTIFICATION_FACEBOOK',\n  NOTIFICATION_GOOGLE_HANGOUTS: 'system://images/NOTIFICATION_GOOGLE_HANGOUTS',\n  NOTIFICATION_TELEGRAM: 'system://images/NOTIFICATION_TELEGRAM',\n  NOTIFICATION_TWITTER: 'system://images/NOTIFICATION_TWITTER',\n  NOTIFICATION_GOOGLE_INBOX: 'system://images/NOTIFICATION_GOOGLE_INBOX',\n  NOTIFICATION_MAILBOX: 'system://images/NOTIFICATION_MAILBOX',\n  NOTIFICATION_OUTLOOK: 'system://images/NOTIFICATION_OUTLOOK',\n  NOTIFICATION_INSTAGRAM: 'system://images/NOTIFICATION_INSTAGRAM',\n  NOTIFICATION_BLACKBERRY_MESSENGER:\n                     'system://images/NOTIFICATION_BLACKBERRY_MESSENGER',\n  NOTIFICATION_LINE: 'system://images/NOTIFICATION_LINE',\n  NOTIFICATION_SNAPCHAT: 'system://images/NOTIFICATION_SNAPCHAT',\n  NOTIFICATION_WECHAT: 'system://images/NOTIFICATION_WECHAT',\n  NOTIFICATION_VIBER: 'system://images/NOTIFICATION_VIBER',\n  NOTIFICATION_SKYPE: 'system://images/NOTIFICATION_SKYPE',\n  NOTIFICATION_YAHOO_MAIL: 'system://images/NOTIFICATION_YAHOO_MAIL',\n  GENERIC_EMAIL: 'system://images/GENERIC_EMAIL',\n  GENERIC_SMS: 'system://images/GENERIC_SMS',\n  GENERIC_WARNING: 'system://images/GENERIC_WARNING',\n  GENERIC_CONFIRMATION: 'system://images/GENERIC_CONFIRMATION',\n  GENERIC_QUESTION: 'system://images/GENERIC_QUESTION',\n  PARTLY_CLOUDY: 'system://images/PARTLY_CLOUDY',\n  CLOUDY_DAY: 'system://images/CLOUDY_DAY',\n  LIGHT_SNOW: 'system://images/LIGHT_SNOW',\n  LIGHT_RAIN: 'system://images/LIGHT_RAIN',\n  HEAVY_RAIN: 'system://images/HEAVY_RAIN',\n  HEAVY_SNOW: 'system://images/HEAVY_SNOW',\n  TIMELINE_WEATHER: 'system://images/TIMELINE_WEATHER',\n  TIMELINE_SUN: 'system://images/TIMELINE_SUN',\n  RAINING_AND_SNOWING: 'system://images/RAINING_AND_SNOWING',\n  TIMELINE_MISSED_CALL: 'system://images/TIMELINE_MISSED_CALL',\n  TIMELINE_CALENDAR: 'system://images/TIMELINE_CALENDAR',\n  TIMELINE_SPORTS: 'system://images/TIMELINE_SPORTS',\n  TIMELINE_BASEBALL: 'system://images/TIMELINE_BASEBALL',\n  AMERICAN_FOOTBALL: 'system://images/AMERICAN_FOOTBALL',\n  CRICKET_GAME: 'system://images/CRICKET_GAME',\n  SOCCER_GAME: 'system://images/SOCCER_GAME',\n  HOCKEY_GAME: 'system://images/HOCKEY_GAME',\n  RESULT_DISMISSED: 'system://images/RESULT_DISMISSED',\n  RESULT_DELETED: 'system://images/RESULT_DELETED',\n  RESULT_MUTE: 'system://images/RESULT_MUTE',\n  RESULT_SENT: 'system://images/RESULT_SENT',\n  RESULT_FAILED: 'system://images/RESULT_FAILED',\n  STOCKS_EVENT: 'system://images/STOCKS_EVENT',\n  MUSIC_EVENT: 'system://images/MUSIC_EVENT',\n  BIRTHDAY_EVENT: 'system://images/BIRTHDAY_EVENT',\n  PAY_BILL: 'system://images/PAY_BILL',\n  HOTEL_RESERVATION: 'system://images/HOTEL_RESERVATION',\n  TIDE_IS_HIGH: 'system://images/TIDE_IS_HIGH',\n  NEWS_EVENT: 'system://images/NEWS_EVENT',\n  SCHEDULED_EVENT: 'system://images/SCHEDULED_EVENT',\n  DURING_PHONE_CALL: 'system://images/DURING_PHONE_CALL',\n  CHECK_INTERNET_CONNECTION: 'system://images/CHECK_INTERNET_CONNECTION',\n  MOVIE_EVENT: 'system://images/MOVIE_EVENT',\n  GLUCOSE_MONITOR: 'system://images/GLUCOSE_MONITOR',\n  ALARM_CLOCK: 'system://images/ALARM_CLOCK',\n  CAR_RENTAL: 'system://images/CAR_RENTAL',\n  DINNER_RESERVATION: 'system://images/DINNER_RESERVATION',\n  RADIO_SHOW: 'system://images/RADIO_SHOW',\n  AUDIO_CASSETTE: 'system://images/AUDIO_CASSETTE',\n  SCHEDULED_FLIGHT: 'system://images/SCHEDULED_FLIGHT',\n  NO_EVENTS: 'system://images/NO_EVENTS',\n  REACHED_FITNESS_GOAL: 'system://images/REACHED_FITNESS_GOAL',\n  DAY_SEPARATOR: 'system://images/DAY_SEPARATOR',\n  WATCH_DISCONNECTED: 'system://images/WATCH_DISCONNECTED',\n  TV_SHOW: 'system://images/TV_SHOW',\n\n  /* deprecated */\n  BASEBALL: 'system://images/TIMELINE_BASEBALL',\n  CHAT: 'system://images/GENERIC_EMAIL',\n  TAPE: 'system://images/AUDIO_CASSETTE',\n  FOOTBALL: 'system://images/AMERICAN_FOOTBALL',\n  MAIL: 'system://images/GENERIC_EMAIL',\n  BULB: 'system://images/NOTIFICATION_FLAG',\n  CALENDAR: 'system://images/TIMELINE_CALENDAR',\n  SUN: 'system://images/TIMELINE_SUN',\n  PIN: 'system://images/NOTIFICATION_FLAG',\n  BATT_FULL: 'system://images/NOTIFICATION_FLAG',\n  BATT_EMPTY: 'system://images/NOTIFICATION_FLAG',\n  ALARM: 'system://images/ALARM_CLOCK',\n};\n\nPin.LayoutType = {\n  GENERIC_PIN: 'genericPin',\n  CALENDAR_PIN: 'calendarPin',\n  GENERIC_REMINDER: 'genericReminder',\n  GENERIC_NOTIFICATION: 'genericNotification',\n  COMM_NOTIFICATION: 'commNotification',\n  WEATHER_PIN: 'weatherPin',\n  SPORTS_PIN: 'sportsPin',\n};\n\nPin.ActionType = {\n  OPEN_WATCH_APP: 'openWatchApp',\n};\n\nPin.Action = Action;\nPin.Layout = Layout;\nPin.Notification = Notification;\nPin.Reminder = Reminder;\n\n/**\n * Add a reminder\n *\n * @param {(Reminder|Object)} reminder\n */\nPin.prototype.addReminder = function (reminder) {\n  this.reminders.push(\n    reminder instanceof Reminder ? reminder : new Reminder(reminder)\n  );\n  return this;\n};\n\n/**\n * Add an action\n *\n * @param {(Action|Object)} action\n */\nPin.prototype.addAction = function (action) {\n  this.actions.push(\n    action instanceof Action ? action : new Action(action)\n  );\n  return this;\n};\n","/home/travis/build/npmtest/node-npmtest-pebble-api/node_modules/pebble-api/lib/action.js":"'use strict';\n\n/**\n * Action\n *\n * @constructor\n * @param {Object} [opts]\n */\nmodule.exports = function (opts) {\n\n  if (opts && opts.title) {\n    if (typeof opts.title !== 'string') {\n      throw new Error('Expected title to be a string.');\n    }\n    this.title = opts.title;\n  }\n\n  if (opts && opts.type) {\n    if (typeof opts.type !== 'string') {\n      throw new Error('Expected type to be a string.');\n    }\n    this.type = opts.type;\n  }\n\n  if (opts && opts.launchCode) {\n    if (typeof opts.launchCode !== 'number') {\n      throw new Error('Expected launchCode to be a number.');\n    }\n    this.launchCode = opts.launchCode;\n  }\n\n  if (!this.type) {\n    throw new Error('`type` is required by Action.');\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-pebble-api/node_modules/pebble-api/lib/layout.js":"'use strict';\n\n/**\n * Layout\n *\n * @constructor\n * @param {Object} [opts]\n */\nmodule.exports = function (opts) {\n\n  if (opts && opts.type) {\n    if (typeof opts.type !== 'string') {\n      throw new Error('Expected type to be a string.');\n    }\n    this.type = opts.type;\n  }\n\n  if (opts && opts.title) {\n    if (typeof opts.title !== 'string') {\n      throw new Error('Expected title to be a string.');\n    }\n    this.title = opts.title;\n  }\n\n  if (opts && opts.shortTitle) {\n    if (typeof opts.shortTitle !== 'string') {\n      throw new Error('Expected shortTitle to be a string.');\n    }\n    this.shortTitle = opts.shortTitle;\n  }\n\n  if (opts && opts.subtitle) {\n    if (typeof opts.subtitle !== 'string') {\n      throw new Error('Expected subtitle to be a string.');\n    }\n    this.subtitle = opts.subtitle;\n  }\n\n  if (opts && opts.body) {\n    if (typeof opts.body !== 'string') {\n      throw new Error('Expected body to be a string.');\n    }\n    this.body = opts.body;\n  }\n\n  if (opts && opts.tinyIcon) {\n    if (typeof opts.tinyIcon !== 'string') {\n      throw new Error('Expected tinyIcon to be a string.');\n    }\n    this.tinyIcon = opts.tinyIcon;\n  }\n\n  if (opts && opts.smallIcon) {\n    if (typeof opts.smallIcon !== 'string') {\n      throw new Error('Expected smallIcon to be a string.');\n    }\n    this.smallIcon = opts.smallIcon;\n  }\n\n  if (opts && opts.largeIcon) {\n    if (typeof opts.largeIcon !== 'string') {\n      throw new Error('Expected largeIcon to be a string.');\n    }\n    this.largeIcon = opts.largeIcon;\n  }\n\n  if (opts && opts.foregroundColor) {\n    if (typeof opts.foregroundColor !== 'string') {\n      throw new Error('Expected foregroundColor to be a string.');\n    }\n    this.foregroundColor = opts.foregroundColor;\n  }\n\n  if (opts && opts.primaryColor) {\n    if (typeof opts.primaryColor !== 'string') {\n      throw new Error('Expected primaryColor to be a string.');\n    }\n    this.primaryColor = opts.primaryColor;\n  }\n\n  if (opts && opts.secondaryColor) {\n    if (typeof opts.secondaryColor !== 'string') {\n      throw new Error('Expected secondaryColor to be a string.');\n    }\n    this.secondaryColor = opts.secondaryColor;\n  }\n\n  if (opts && opts.backgroundColor) {\n    if (typeof opts.backgroundColor !== 'string') {\n      throw new Error('Expected backgroundColor to be a string.');\n    }\n    this.backgroundColor = opts.backgroundColor;\n  }\n\n  if (opts && opts.headings) {\n    if (!(opts.headings instanceof Array)) {\n      throw new Error('Expected headings to be an array.');\n    }\n    opts.headings.forEach(function (heading) {\n      if (typeof heading !== 'string') {\n        throw new Error('Expected headings array to contain strings.');\n      }\n    });\n    this.headings = opts.headings;\n  }\n\n  if (opts && opts.paragraphs) {\n    if (!(opts.paragraphs instanceof Array)) {\n      throw new Error('Expected paragraphs to be an array.');\n    }\n    opts.paragraphs.forEach(function (paragraph) {\n      if (typeof paragraph !== 'string') {\n        throw new Error('Expected paragraphs array to contain strings.');\n      }\n    });\n    this.paragraphs = opts.paragraphs;\n  }\n\n  if (this.headings || this.paragraphs) {\n    if (!this.headings) {\n      throw new Error('Expected headings as paragraphs is set.');\n    }\n    if (!this.paragraphs) {\n      throw new Error('Expected paragraphs as headings is set.');\n    }\n    if (this.headings.length !== this.paragraphs.length) {\n      throw new Error('Number of headings must equal the number of paragraphs.');\n    }\n  }\n\n  if (opts && opts.lastUpdated) {\n    if (!(opts.lastUpdated instanceof Date)) {\n      throw new Error('Expected lastUpdated to be a Date.');\n    }\n    this.lastUpdated = opts.lastUpdated;\n  }\n\n  if (opts && opts.locationName) {\n    if (typeof opts.locationName !== 'string') {\n      throw new Error('Expected locationName to be a string.');\n    }\n    this.locationName = opts.locationName;\n  }\n\n  if (opts && opts.sender) {\n    if (typeof opts.sender !== 'string') {\n      throw new Error('Expected sender to be a string.');\n    }\n    this.sender = opts.sender;\n  }\n\n  if (opts && opts.broadcaster) {\n    if (typeof opts.broadcaster !== 'string') {\n      throw new Error('Expected broadcaster to be a string.');\n    }\n    this.broadcaster = opts.broadcaster;\n  }\n\n  if (opts && opts.rankAway) {\n    if (typeof opts.rankAway !== 'string') {\n      throw new Error('Expected rankAway to be a string.');\n    }\n    this.rankAway = opts.rankAway;\n  }\n\n  if (opts && opts.rankHome) {\n    if (typeof opts.rankHome !== 'string') {\n      throw new Error('Expected rankHome to be a string.');\n    }\n    this.rankHome = opts.rankHome;\n  }\n\n  if (opts && opts.nameAway) {\n    if (typeof opts.nameAway !== 'string') {\n      throw new Error('Expected nameAway to be a string.');\n    }\n    this.nameAway = opts.nameAway;\n  }\n\n  if (opts && opts.nameHome) {\n    if (typeof opts.nameHome !== 'string') {\n      throw new Error('Expected nameHome to be a string.');\n    }\n    this.nameHome = opts.nameHome;\n  }\n\n  if (opts && opts.recordAway) {\n    if (typeof opts.recordAway !== 'string') {\n      throw new Error('Expected recordAway to be a string.');\n    }\n    this.recordAway = opts.recordAway;\n  }\n\n  if (opts && opts.recordHome) {\n    if (typeof opts.recordHome !== 'string') {\n      throw new Error('Expected recordHome to be a string.');\n    }\n    this.recordHome = opts.recordHome;\n  }\n\n  if (opts && opts.scoreAway) {\n    if (typeof opts.scoreAway !== 'string') {\n      throw new Error('Expected scoreAway to be a string.');\n    }\n    this.scoreAway = opts.scoreAway;\n  }\n\n  if (opts && opts.scoreHome) {\n    if (typeof opts.scoreHome !== 'string') {\n      throw new Error('Expected scoreHome to be a string.');\n    }\n    this.scoreHome = opts.scoreHome;\n  }\n\n  if (opts && opts.sportsGameState) {\n    if (typeof opts.sportsGameState !== 'string') {\n      throw new Error('Expected sportsGameState to be a string.');\n    }\n    this.sportsGameState = opts.sportsGameState;\n  }\n\n  if (!this.type) {\n    throw new Error('`type` is required by Layout.');\n  }\n\n  switch (this.type) {\n    case 'genericPin':\n      if (!this.title) {\n        throw new Error('`title` is required by a genericPin Layout.');\n      }\n      if (!this.tinyIcon) {\n        throw new Error('`tinyIcon` is required by a genericPin Layout.');\n      }\n      break;\n\n    case 'calendarPin':\n      if (!this.title) {\n        throw new Error('`title` is required by a calendarPin Layout.');\n      }\n      break;\n\n    case 'genericReminder':\n      if (!this.title) {\n        throw new Error('`title` is required by a genericReminder Layout.');\n      }\n      if (!this.tinyIcon) {\n        throw new Error('`tinyIcon` is required by a genericReminder Layout.');\n      }\n      break;\n\n    case 'genericNotification':\n      if (!this.title) {\n        throw new Error('`title` is required by a genericNotification Layout.');\n      }\n      if (!this.tinyIcon) {\n        throw new Error('`tinyIcon` is required by a genericNotification Layout.');\n      }\n      break;\n\n    case 'commNotification':\n      if (!this.title) {\n        throw new Error('`title` is required by a commNotification Layout.');\n      }\n      if (!this.tinyIcon) {\n        throw new Error('`tinyIcon` is required by a commNotification Layout.');\n      }\n      if (!this.sender) {\n        throw new Error('`sender` is required by a commNotification Layout.');\n      }\n      break;\n\n    case 'weatherPin':\n      if (!this.title) {\n        throw new Error('`title` is required by a weatherPin Layout.');\n      }\n      if (!this.tinyIcon) {\n        throw new Error('`tinyIcon` is required by a weatherPin Layout.');\n      }\n      if (!this.largeIcon) {\n        throw new Error('`largeIcon` is required by a weatherPin Layout.');\n      }\n      if (!this.locationName) {\n        throw new Error('`locationName` is required by a weatherPin Layout.');\n      }\n      break;\n\n    case 'sportsPin':\n      if (!this.title) {\n        throw new Error('`title` is required by a sportsPin Layout.');\n      }\n      if (!this.tinyIcon) {\n        throw new Error('`tinyIcon` is required by a sportsPin Layout.');\n      }\n      if (!this.largeIcon) {\n        throw new Error('`largeIcon` is required by a sportsPin Layout.');\n      }\n      break;\n\n    default:\n      throw new Error(this.type + ' is not a valid Layout type');\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-pebble-api/node_modules/pebble-api/lib/notification.js":"'use strict';\n\nvar Layout = require('./layout');\n\n/**\n * Notification\n *\n * @constructor\n * @param {Object} [opts]\n */\nmodule.exports = function (opts) {\n\n  if (opts && opts.time) {\n    if (!(opts.time instanceof Date)) {\n      throw new Error('Expected time to be a Date.');\n    }\n    this.time = opts.time;\n  }\n\n  if (opts && opts.layout) {\n    this.layout =\n      opts.layout instanceof Layout ? opts.layout : new Layout(opts.layout);\n  }\n\n  if (!this.layout) {\n    throw new Error('`layout` is required by Notification.');\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-pebble-api/node_modules/pebble-api/lib/reminder.js":"'use strict';\n\nvar Layout = require('./layout');\n\n/**\n * Reminder\n *\n * @constructor\n * @param {Object} [opts]\n */\nmodule.exports = function (opts) {\n  if (opts && opts.time) {\n    if (!(opts.time instanceof Date)) {\n      throw new Error('Expected time to be a Date.');\n    }\n    this.time = opts.time;\n  }\n\n  if (opts && opts.layout) {\n    this.layout =\n      opts.layout instanceof Layout ? opts.layout : new Layout(opts.layout);\n  }\n\n  if (!this.time) {\n    throw new Error('`time` is required by Reminder.');\n  }\n};\n"}